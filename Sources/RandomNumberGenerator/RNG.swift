// Generated by svd2swift.

import MMIO

/// Random number generator
@RegisterBlock
struct RNG {
    /// control register
    @RegisterBlock(offset: 0x0)
    var cr: Register<CR>

    /// status register
    @RegisterBlock(offset: 0x4)
    var sr: Register<SR>

    /// data register
    @RegisterBlock(offset: 0x8)
    var dr: Register<DR>
}

extension RNG {
    /// control register
    @Register(bitWidth: 32)
    struct CR {
        /// Interrupt enable
        @ReadWrite(bits: 3..<4)
        var ie: IE

        /// Random number generator enable
        @ReadWrite(bits: 2..<3)
        var rngen: RNGEN
    }

    /// status register
    @Register(bitWidth: 32)
    struct SR {
        /// Seed error interrupt status
        @ReadWrite(bits: 6..<7)
        var seis: SEIS

        /// Clock error interrupt status
        @ReadWrite(bits: 5..<6)
        var ceis: CEIS

        /// Seed error current status
        @ReadOnly(bits: 2..<3)
        var secs: SECS

        /// Clock error current status
        @ReadOnly(bits: 1..<2)
        var cecs: CECS

        /// Data ready
        @ReadOnly(bits: 0..<1)
        var drdy: DRDY
    }

    /// data register
    @Register(bitWidth: 32)
    struct DR {
        /// Random data
        @ReadOnly(bits: 0..<32)
        var rndata: RNDATA
    }
}
